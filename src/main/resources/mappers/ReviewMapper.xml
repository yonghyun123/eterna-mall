<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 네임스페이스(사용영역) 설정 -->
<mapper namespace="kr.or.kosta.eterna.review">

	<!-- 리뷰 추가 -->
	<!-- id 값 next.val 로 수정해야함!!!!!!!!!! -->
	<insert id="create" parameterType="Review">
		INSERT INTO sm_product_review 
            (id, 
             user_id, 
             product_id, 
             board_id, 
             content,
             subject, 
             score,
             group_no,
             level_no) 
		VALUES     (review_id_seq.nextval, 
            #{userId}, 
            #{productId}, 
            1, 
            #{content},
            #{subject},
            #{score},
            review_id_seq.currval,
            0)
	</insert>


	<!-- Review 답글 -->
    <!-- id 값 next.val 로 수정해야함!!!!!!!!!! -->
    <insert id="createComment" parameterType="Review">
      INSERT INTO sm_product_review 
            (id, 
             user_id, 
             product_id, 
             board_id, 
             content, 
             group_no, 
             level_no) 
      VALUES     (8,
            'manager', 
            (select product_id
            from SM_product_answer
            where id=#{id}), 
            2, 
            #{content}, 
            (select group_no
            from SM_product_answer
            where id=#{id}), 
            1)
    </insert>
   
	<!-- 상품별 리뷰 리스트 -->
	<select id="listItem" resultType="Review">
		SELECT user_id     AS userId, 
		       product_id  AS productId, 
		       regdate,
		       subject, 
		       content, 
		       score,
		       board_id as boardId, 
		       answer_flag AS answerFlag 
		FROM   sm_product_review 
		WHERE  product_id = #{productId}
	</select>
	
	<!-- 회원별 리뷰 리스트 -->
	<select id="myReviewList" resultType="Review">
		SELECT  pr.user_id     AS userId, 
        		pr.product_id  AS productId, 
        		pr.regdate, 
        		subject,
        		pr.content, 
        		pr.score,
        		pr.board_id AS boardId, 
        		pr.answer_flag AS answerFlag,
        		p.product_description AS description
		FROM    sm_product_review pr
		JOIN    sm_product p
		ON      pr.product_id = p.product_id
		WHERE   user_id = #{userId}
	</select>
	
	<!-- 전체 리뷰 리스트 -->
	<select id="listAll" resultType="Review">
	 SELECT user_id     AS userId,
	   id, 
       product_id  AS productId, 
       regdate, 
       content, 
       score,
       board_id as boardId, 
       answer_flag AS answerFlag 
	FROM   sm_product_review
  	order by regdate desc
	</select>
	
	<!-- 상품 구매한 회원 체크 -->
	<select id="checkUser" resultType="map" parameterType="map">
	 SELECT distinct(bm.product_id)     AS "productId"
	 FROM   SM_buy_manage bm
	 WHERE  bm.product_id = #{productId}
     AND    bm.buy_id in (SELECT id 
     					 FROM   SM_buy_info
     					 WHERE  user_id = #{userId})
	</select>
	
	<!-- 답글 등록 시 flag update -->
    <update id="updateFlag">
    UPDATE sm_product_review
    SET    answer_flag = 1
    WHERE  id = #{id}
    </update>
   
    <!-- 답변 대기중인 review -->
    <select id="newReview" resultType="int">
    SELECT Count(answer_flag) 
    FROM   sm_product_review 
    WHERE  answer_flag = 0 
    </select>
</mapper>